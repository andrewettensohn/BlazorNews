@page "/"
@inject RestService restService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<style>
    .list-group {
        max-height: 500px;
        overflow-x: hidden;
        margin-bottom: 10px;
        overflow-y: scroll;
        -webkit-overflow-scrolling: touch;
    }
</style>

<h3 class="px-3">Hacker News Feed</h3>

@if (articles != null)
{
    <div class="list-group">
        @foreach (Article article in articles)
        {
            <div class="list-group-item list-group-item-action">
                <a href="@article.Url" style="font-size: 12px" class="font-weight-bold mb-0">@article.Title</a>
                <span class="font-weight-light mt-0" style="font-size: 10px">(@article.Url)</span>
                <span class="float-right">
                    <button class="btn btn-outline-secondary" @onclick="(async () => await SaveArticle(article))">Save</button>
                </span>
            </div>
        }
    </div>
    <div class="d-flex justify-content-center">
        <div class="spinner-border @loadingCss" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <button class="btn font-weight-bold btn-sm ml-3 border-secondary" @onclick="(async () => await LoadMoreArticles())">More Stories</button>
}
else
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}

@code
{
    private List<Article> articles;
    private string loadingCss = "invisible";

    protected override async Task OnInitializedAsync()
    {
        articles = await restService.GetTopStories();
    }

    private async Task SaveArticle(Article article)
    {
        List<Article> savedArticles = await localStorage.GetItemAsync<List<Article>>("savedArticles");

        if(savedArticles != null)
        {
            if (!savedArticles.Any(x => x.Id == article.Id))
            {
                savedArticles.Add(article);
                await localStorage.SetItemAsync("savedArticles", savedArticles);
            }
        }
        else
        {
            savedArticles = new List<Article>{ article };
            await localStorage.SetItemAsync("savedArticles", savedArticles);
        }

    }

    private async Task LoadMoreArticles()
    {
        loadingCss = string.Empty;
        articles.AddRange(await restService.PerformFeedPaging());
        loadingCss = "invisible";
    }
}